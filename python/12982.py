"""
공 포장하기 문제와 다르게 이 문제의 색의 종류는 총 K가지이다. 색은 1부터 K까지 정수로 나타내며, 색이 i인 공의 개수는 X[i]개이다.

오늘은 이 공을 박스로 포장하려고 한다. 박스에는 공이 최대 K개까지 들어갈 수 있다.

박스에 들어가는 공의 색은 모두 다르거나, 모두 같아야 한다.

필요한 박스 개수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 색의 개수 K가 주어진다. (1 ≤ K ≤ 100,000)

둘째 줄에는 각각의 색을 가지는 공의 개수 X[i]가 주어진다. (1 ≤ X[i] ≤ 1,000,000,000)

출력
첫째 줄에 필요한 박스의 최소 개수를 출력한다.

예제 입력 1
3
4 2 4
예제 출력 1
4
예제 입력 2
1
58
예제 출력 2
58
예제 입력 3
7
1 6 6 6 6 6 6
예제 출력 3
6
예제 입력 4
5
5 3 5 3 5
예제 출력 4
5


"""




k = int(input())
X = list(map(int,input().split()))
box = 0
same = [0]*(k+1)
S = [0]*(k+1)
ans =  0x7f7f7f7f
for i in range(k):
    box += X[i] // k
    X[i] = X[i] % k
    same[X[i]] += 1
    # while X[i] < k :
    #     X[i] = X[i] - k
    #     box += 1
for i in range(1, k+1):
    S[i] = S[i-1] + same[i]

for i in range(k+1):
    ans = min(ans, i + S[k] - S[i])

print(box + ans)

"""
각 색갈의 공을 일단 k개 씩 빼줍니다.(여기서 한번 빼줄때마다 박스 갯수 1개식 증가)
그리고 임의의 리스트(길이 k+!의 리스트)에 i번째 요소에 i개 남은 색상이 있으면 남은 색상 갯수 만큰 +!
그리스트를 새로운 리스트에 담는데, 위 리스트의 i 요소 이하를 더 한값을 i에 담는 다고 생각
이 리스트를 이용해 1~k 개의 남은 공 개수를 i 라하면 루프에서 i개 이하로 남은 색상을 각 한공식 박스에 담을지 한 박스에 한색상 식 담을지 min함수를 이용해 구한다.

설명이 많이 모자란데... 이렇게 넘어가겠다

"""